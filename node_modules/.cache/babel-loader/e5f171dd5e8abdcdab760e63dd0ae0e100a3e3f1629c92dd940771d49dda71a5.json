{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikol\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\\\u0421\\u043C\\u0435\\u0440\\u0442\\u044C \\u043F\\u043E\\u044D\\u0442\\u0430\\\\just-do-it\\\\src\\\\components\\\\Favourites.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Создаем контекст избранных товаров\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavouritesContext = /*#__PURE__*/createContext();\n\n// Провайдер контекста для избранных товаров\nexport const FavouritesProvider = ({\n  children\n}) => {\n  _s();\n  // Состояние избранных товаров\n  const [favourites, setFavourites] = useState(() => {\n    const savedFavourites = localStorage.getItem('favourites');\n    return savedFavourites ? JSON.parse(savedFavourites) : [];\n  });\n\n  // Эффект для сохранения избранных товаров в localStorage\n  useEffect(() => {\n    localStorage.setItem('favourites', JSON.stringify(favourites));\n  }, [favourites]);\n\n  // Функция для добавления товара в избранное\n  const addToFavourites = product => {\n    // Проверяем, есть ли товар уже в избранных\n    if (!favourites.find(fav => fav.id === product.id)) {\n      setFavourites([...favourites, product]);\n    }\n  };\n\n  // Функция для удаления товара из избранного\n  const removeFromFavourites = productId => {\n    const updatedFavourites = favourites.filter(fav => fav.id !== productId);\n    setFavourites(updatedFavourites);\n  };\n\n  // Значение, которое будет доступно во всем приложении через useContext\n  const value = {\n    favourites,\n    addToFavourites,\n    removeFromFavourites\n  };\n\n  // Возвращаем провайдер контекста с детьми\n  return /*#__PURE__*/_jsxDEV(FavouritesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n// Хук для использования контекста избранных товаров\n_s(FavouritesProvider, \"HEd+fi4c1ti8R/l05zjudJvIOhQ=\");\n_c = FavouritesProvider;\nexport const useFavourites = () => {\n  _s2();\n  return useContext(FavouritesContext);\n};\n_s2(useFavourites, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FavouritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FavouritesContext","FavouritesProvider","children","_s","favourites","setFavourites","savedFavourites","localStorage","getItem","JSON","parse","setItem","stringify","addToFavourites","product","find","fav","id","removeFromFavourites","productId","updatedFavourites","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavourites","_s2","$RefreshReg$"],"sources":["C:/Users/nikol/OneDrive/Рабочий стол/Смерть поэта/just-do-it/src/components/Favourites.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Создаем контекст избранных товаров\r\nconst FavouritesContext = createContext();\r\n\r\n// Провайдер контекста для избранных товаров\r\nexport const FavouritesProvider = ({ children }) => {\r\n  // Состояние избранных товаров\r\n  const [favourites, setFavourites] = useState(() => {\r\n    const savedFavourites = localStorage.getItem('favourites');\r\n    return savedFavourites ? JSON.parse(savedFavourites) : [];\r\n  });\r\n\r\n  // Эффект для сохранения избранных товаров в localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem('favourites', JSON.stringify(favourites));\r\n  }, [favourites]);\r\n\r\n  // Функция для добавления товара в избранное\r\n  const addToFavourites = (product) => {\r\n    // Проверяем, есть ли товар уже в избранных\r\n    if (!favourites.find((fav) => fav.id === product.id)) {\r\n      setFavourites([...favourites, product]);\r\n    }\r\n  };\r\n\r\n  // Функция для удаления товара из избранного\r\n  const removeFromFavourites = (productId) => {\r\n    const updatedFavourites = favourites.filter((fav) => fav.id !== productId);\r\n    setFavourites(updatedFavourites);\r\n  };\r\n\r\n  // Значение, которое будет доступно во всем приложении через useContext\r\n  const value = {\r\n    favourites,\r\n    addToFavourites,\r\n    removeFromFavourites,\r\n  };\r\n\r\n  // Возвращаем провайдер контекста с детьми\r\n  return (\r\n    <FavouritesContext.Provider value={value}>\r\n      {children}\r\n    </FavouritesContext.Provider>\r\n  );\r\n};\r\n\r\n// Хук для использования контекста избранных товаров\r\nexport const useFavourites = () => {\r\n  return useContext(FavouritesContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGN,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMO,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACjD,MAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC1D,OAAOF,eAAe,GAAGG,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,GAAG,EAAE;EAC3D,CAAC,CAAC;;EAEF;EACAT,SAAS,CAAC,MAAM;IACdU,YAAY,CAACI,OAAO,CAAC,YAAY,EAAEF,IAAI,CAACG,SAAS,CAACR,UAAU,CAAC,CAAC;EAChE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMS,eAAe,GAAIC,OAAO,IAAK;IACnC;IACA,IAAI,CAACV,UAAU,CAACW,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,OAAO,CAACG,EAAE,CAAC,EAAE;MACpDZ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEU,OAAO,CAAC,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMI,oBAAoB,GAAIC,SAAS,IAAK;IAC1C,MAAMC,iBAAiB,GAAGhB,UAAU,CAACiB,MAAM,CAAEL,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKE,SAAS,CAAC;IAC1Ed,aAAa,CAACe,iBAAiB,CAAC;EAClC,CAAC;;EAED;EACA,MAAME,KAAK,GAAG;IACZlB,UAAU;IACVS,eAAe;IACfK;EACF,CAAC;;EAED;EACA,oBACEnB,OAAA,CAACC,iBAAiB,CAACuB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EACtCA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;;AAED;AAAAxB,EAAA,CAzCaF,kBAAkB;AAAA2B,EAAA,GAAlB3B,kBAAkB;AA0C/B,OAAO,MAAM4B,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,OAAOnC,UAAU,CAACK,iBAAiB,CAAC;AACtC,CAAC;AAAC8B,GAAA,CAFWD,aAAa;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}